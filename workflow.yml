name: "clinicanhealth"

trigger:
  - master
  - staging
  - azure-pipelines

variables:
  frontendDirectory: "frontend"
  backendDirectory: "backend"
  vmImageName: "ubuntu-latest"

stages:
  - stage: FrontendBuild
    displayName: "Frontend"
    jobs:
      - job:
        displayName: "Frontend"
        pool:
          vmImage: $(vmImageName)
        steps:
          # TODO: ADD JEST TEST REACT COVERAGE
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: "$(frontendDirectory)"
              artifactName: "frontendartifact"
            displayName: "Publish Frontend Artifacts"
  - stage: BackendBuild
    displayName: "Backend"
    jobs:
      - job:
        displayName: "Upload Artifact"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install nodejs"
          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(backendDirectory)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true
          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: backendartifact
# Remove on final
#   displayName: "Install dependencies"
#   workingDirectory: $(frontendDirectory)
# - script: npm run build:staging
#   displayName: "Build Frontend"
#   workingDirectory: $(frontendDirectory)
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: "$(frontendDirectory)"
#     artifactName: "frontendartifact"
#   displayName: "Publish Frontend Artifacts"

# - stage: BackendDeploy
#   displayName: "Backend Delpoyment Stage"
#   dependsOn: BackendBuild
#   condition: succeeded()
#   jobs:
#     - deployment: Deploy
#       displayName: "Deploy Backend"
#       environment: $(environmentName)
#       pool:
#         vmImage: $(vmImageName)
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - task: AzureRmWebAppDeployment@4
#                 displayName: "Azure App Service Deploy: clinicianhealth"
#                 inputs:
#                   azureSubscription: $(azureSubscription)
#                   appType: webAppLinux
#                   WebAppName: $(webAppName)
#                   packageForLinux: "$(Pipeline.Workspace)/backendartifact/$(Build.BuildId).zip"
#                   RuntimeStack: "NODE|16-lts"
#                   StartupCommand: "npm run start"
#                   ScriptType: "Inline Script"
#                   InlineScript: |
#                     node -v
#                     npm -v
